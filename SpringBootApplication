package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import javax.persistence.*;
import java.util.List;

@SpringBootApplication
@EnableJpaRepositories
public class DemoApplication {
    public static void main(String[] args) {
        SpringApplication.run(DemoApplication.class, args);
    }
}

@Entity
class User {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String name;
    private String email;
    
    public User() {}
    
    public User(String name, String email) {
        this.name = name;
        this.email = email;
    }
    
    public Long getId() { return id; }
    public String getName() { return name; }
    public void setName(String name) { this.name = name; }
    public String getEmail() { return email; }
    public void setEmail(String email) { this.email = email; }
}

interface UserRepository extends JpaRepository<User, Long> {}

@Service
class UserService {
    @Autowired
    private UserRepository userRepository;
    
    public List<User> getAllUsers() { return userRepository.findAll(); }
    public User addUser(User user) { return userRepository.save(user); }
}

@RestController
@RequestMapping("/users")
class UserController {
    @Autowired
    private UserService userService;
    
    @GetMapping
    public List<User> getUsers() { return userService.getAllUsers(); }
    
    @PostMapping
    public User createUser(@RequestBody User user) { return userService.addUser(user); }
}
